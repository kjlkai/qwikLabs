gcloud auth list

gcloud config list project

#Task 1. Connect to the lab GKE cluster and deploy a sample workload

export my_zone=us-central1-a
export my_cluster=standard-cluster-1

source <(kubectl completion bash)

gcloud container clusters get-credentials $my_cluster --zone $my_zone

#web.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      run: web
  template:
    metadata:
      labels:
        run: web
    spec:
      containers:
      - image: gcr.io/google-samples/hello-app:1.0
        name: web
        ports:
        - containerPort: 8080
          protocol: TCP
          
          
 git clone https://github.com/GoogleCloudPlatform/training-data-analyst
 ln -s ~/training-data-analyst/courses/ak8s/v1.1 ~/ak8s
 cd ~/ak8s/Autoscaling/
 
 kubectl create -f web.yaml --save-config
 kubectl expose deployment web --target-port=8080 --type=NodePort
 kubectl get service web
 
#Task 2. Configure autoscaling on the cluster

kubectl get deployment
kubectl autoscale deployment web --max 4 --min 1 --cpu-percent 1
kubectl get deployment

kubectl get hpa

kubectl describe horizontalpodautoscaler web

kubectl get horizontalpodautoscaler web -o yaml

#loadgen.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgen
spec:
  replicas: 4
  selector:
    matchLabels:
      app: loadgen
  template:
    metadata:
      labels:
        app: loadgen
    spec:
      containers:
      - name: loadgen
        image: k8s.gcr.io/busybox
        args:
        - /bin/sh
        - -c
        - while true; do wget -q -O- http://web:8080; done
        
kubectl apply -f loadgen.yaml
kubectl get deployment

kubectl get hpa


kubectl scale deployment loadgen --replicas 0

kubectl get deployment


# Task 3. Manage node pools

gcloud container node-pools create "temp-pool-1" \
--cluster=$my_cluster --zone=$my_zone \
--num-nodes "2" --node-labels=temp=true --preemptible

kubectl get nodes

kubectl get nodes -l temp=true

kubectl taint node -l temp=true nodetype=preemptible:NoExecute

#edit web.yaml
tolerations:
- key: "nodetype"
  operator: Equal
  value: "preemptible"
  

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      run: web
  template:
    metadata:
      labels:
        run: web
    spec:
      tolerations:
      - key: "nodetype"
        operator: Equal
        value: "preemptible"
      nodeSelector:
        temp: "true"
      containers:
      - image: gcr.io/google-samples/hello-app:1.0
        name: web
        ports:
        - containerPort: 8080
          protocol: TCP
          
          

kubectl apply -f web.yaml

kubectl get pods

kubectl describe pods -l run=web

kubectl scale deployment loadgen --replicas 4

kubectl get pods -o wide







 
 
 
 
