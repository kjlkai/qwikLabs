#Create secrets by using the kubectl command and manifest files

#Create ConfigMaps by using the kubectl command and manifest files

#Consume secrets in containers by using environment variables or mounted volumes

#Consume ConfigMaps in containers by using environment variables or mounted volumes

gcloud auth list
gcloud config list project

export my_zone=us-central1-a
export my_cluster=standard-cluster-1
source <(kubectl completion bash)
export my_service_account=[MY-SERVICE-ACCOUNT-EMAIL]

gcloud container clusters create $my_cluster \
  --num-nodes 2 --zone $my_zone \
  --service-account=$my_service_account
  
gcloud container clusters get-credentials $my_cluster --zone $my_zone

export my_pubsub_topic=echo
export my_pubsub_subscription=echo-read

gcloud pubsub topics create $my_pubsub_topic
gcloud pubsub subscriptions create $my_pubsub_subscription \
 --topic=$my_pubsub_topic
 
git clone https://github.com/GoogleCloudPlatform/training-data-analyst
ln -s ~/training-data-analyst/courses/ak8s/v1.1 ~/ak8s
cd ~/ak8s/Secrets/

#pubsub.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pubsub
spec:
  selector:
    matchLabels:
      app: pubsub
  template:
    metadata:
      labels:
        app: pubsub
    spec:
      containers:
      - name: subscriber
        image: gcr.io/google-samples/pubsub-sample:v1
        
kubectl apply -f pubsub.yaml
kubectl get pods -l app=pubsub
kubectl get pods -l app=pubsub

kubectl logs -l app=pubsub


#pubsub-secret.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pubsub
spec:
  selector:
    matchLabels:
      app: pubsub
  template:
    metadata:
      labels:
        app: pubsub
    spec:
      volumes:
      - name: google-cloud-key
        secret:
          secretName: pubsub-key
      containers:
      - name: subscriber
        image: gcr.io/google-samples/pubsub-sample:v1
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
          
kubectl apply -f pubsub-secret.yaml
kubectl get pods -l app=pubsub

gcloud pubsub topics publish $my_pubsub_topic --message="Hello, world!"
kubectl logs -l app=pubsub


kubectl create configmap sample --from-literal=message=hello

kubectl describe configmaps sample

kubectl create configmap sample2 --from-file=sample2.properties

kubectl describe configmaps sample2

#config-map-3.yaml
apiVersion: v1
data:
  airspeed: africanOrEuropean
  meme: testAllTheThings
kind: ConfigMap
metadata:
  name: sample3
  namespace: default
  selfLink: /api/v1/namespaces/default/configmaps/sample3
  
kubectl apply -f config-map-3.yaml
kubectl describe configmaps sample3

kubectl apply -f pubsub-configmap.yaml

kubectl get pods

#pubsub-configmap2.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pubsub
spec:
  selector:
    matchLabels:
      app: pubsub
  template:
    metadata:
      labels:
        app: pubsub
    spec:
      volumes:
      - name: google-cloud-key
        secret:
          secretName: pubsub-key
      - name: config-3
        configMap:
          name: sample3
      containers:
      - name: subscriber
        image: gcr.io/google-samples/pubsub-sample:v1
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
        - name: config-3
          mountPath: /etc/config
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        - name: INSIGHTS
          valueFrom:
            configMapKeyRef:
              name: sample3
              key: meme
              
kubectl apply -f pubsub-configmap2.yaml
kubectl get pods
